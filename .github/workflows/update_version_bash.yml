name: Update AssemblyVersion and FileVersion (bash)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New AssemblyVersion'
        required: true
        default: '1.0.0.0'

jobs:
  update-version:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/App
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check current AssemblyVersion
        id: current_version
        run: |
          echo "$PWD"
          current_version=$(grep -oPm1 "(?<=<AssemblyVersion>)[^<]+" *.csproj)
          echo "Current AssemblyVersion is $current_version"
          echo "New AssemblyVersion is ${{ github.event.inputs.version }}"
          if [ "$current_version" != "${{ github.event.inputs.version }}" ]; then
            echo "Versions are different"
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "Versions are the same"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Update AssemblyVersion if needed
        if: steps.current_version.outputs.version_changed == 'true'
        run: |
          sed -i "s|<AssemblyVersion>.*</AssemblyVersion>|<AssemblyVersion>${{ github.event.inputs.version }}</AssemblyVersion>|g" *.csproj
        shell: bash

      - name: Increment FileVersion
        run: |
          FILEVERSION=$(grep -oPm1 "(?<=<FileVersion>)[^<]+" *.csproj)
          NEWFILEVERSION=$((FILEVERSION+1))
          sed -i "s|<FileVersion>$FILEVERSION</FileVersion>|<FileVersion>$NEWFILEVERSION</FileVersion>|g" *.csproj
        shell: bash

      - name: Commit changes (not really)
        run: |
          new_assembly_version=$(grep -oPm1 "(?<=<AssemblyVersion>)[^<]+" *.csproj)
          new_file_version=$(grep -oPm1 "(?<=<FileVersion>)[^<]+" *.csproj)
          echo "New AssemblyVersion is new_assembly_version"
          echo "New FileVersion is new_file_version"
